[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Здесь будут собраны консольные программы и команды"
  },
  {
    "objectID": "posts/console/index.html",
    "href": "posts/console/index.html",
    "title": "Терминал",
    "section": "",
    "text": "Попробую здесь показать как обычный терминал может заменить файловый менеджер.\nБывают случаи когда проще воспользоваться терминалом как файловым менеджером.Никогда не встречались с ситуацией когда не возможно удалить файл,директорию?В консоли это не вопрос.\nРабота в терминале может показаться не комфортной,не удобной,нужно запоминать много команд.\nНа самом деле для начала работы нужно запомнить 10-12 команд.Ну а далее,если заинтересует,будет проще.\n\n\npwd - выводит полный путь директории где находимся\nls - выводит что находится в директории\nmkdir - создать пустую директорию\ncd - сменить директорию\ntouch file1 - создать пустой файл\n&gt; file1 - создать пустой файл\necho &gt; file.txt - создать пустой файл\necho ‘bla-bla-bla-bla’&gt;&gt; file.txt - дописать в файл\necho ‘bla-bla’&gt; file.txt - перезаписать(сотрет прежнее содержимое) в файл\ncat - просмотр файла\nmv - переименовать,переместить файл,директорию\ncp - копировать файл, пустую директорию\ncp -r - копировать директорию с файлами\nrm - удалить файл\nrmdir - удалить пустую директорию\nrm -r - удалить директорию с файлами\n\nС помощью оператора && (and) можно совмещать команды:\n\n$ mkdir new\n$ cd mkdir new/ && touch file.txt file.md"
  },
  {
    "objectID": "posts/fsck/index.html",
    "href": "posts/fsck/index.html",
    "title": "Fsck - проверка флешки на ошибки",
    "section": "",
    "text": "Для проверки флешки на ошибки можно воспользоваться утилитой fsck (англ. “file system check”).\n\nДля этого нужно выполнить следующие шаги:\n\nПодключите флешку к компьютеру.\nОпределите точное название дискового устройства, которое присвоено флешке, с помощью команды sudo fdisk -l or lsblk.\nОбычно флешки имеют формат sdx, где x - буква, соответствующая устройству.\n\n\nВыполните команду:\n\nsudo fsck /dev/sdx\n\nзаменив sdx на название дискового устройства, присвоенное вашей флешке.\nЕсли в процессе проверки будут найдены ошибки, то fsck предложит исправить их.\n\n\nДля этого нужно ввести:\n\ny (yes)\nEnter\n\nОбратите внимание, что процесс проверки может занять длительное время в зависимости от объема флешки.\nТакже, перед запуском fsck важно убедиться, что флешка не смонтирована.\nЕсли флешка уже смонтирована в системе, то ее нужно размонтировать с помощью команды:\n\nsudo umount /dev/sdx.\n\n\nP.S. Я флешку не подключал.Просто продемонстрировал работу программы.\n\nP.S. Здесь флешка в разъеме,но не подключена.Ошибок нет."
  },
  {
    "objectID": "posts/lf/index.html",
    "href": "posts/lf/index.html",
    "title": "Файловый менеджер",
    "section": "",
    "text": "Практически во всех дистрибутивах Линукс есть Midnight Commander - консольный файловый менеджер (mc).Мне больше по душе LF - это минимализм,быстрота,настраиваемость.\nLF означает List File — это терминальный файловый менеджер для Linux, написанный на языке Go.\nЗдесь я не стал подключать превью видео,фото.Я считаю это лишним “наворотом”,отвлекает.Но у кого будет желание,на ютубе множество рецептов.Здесь же самое основное - просмотр,переименование,перемещение,создание,редактирование,удаление.Еще для меня решающим фактором стало - это использование vim-раскладки клавиатуры.Настройки собраны как говорится “с миру - по нитке”.\n\n\nКак установить LF в Linux\nПерейдите на страницу выпусков LF на github и загрузите последнюю и актуальную версию для вашей операционной системы.\nОн будет содержать один исполняемый файл, поэтому просто переместите его в нужный каталог.\nЗапустите приведенную ниже команду, чтобы загрузить последнюю доступную версию для вашей операционной системы:\n# wget https://github.com/gokcehan/lf/releases/download/r8/lf-linux-amd64.tar.gz\nИзвлеките tar-архив с помощью следующей команды:\n# tar xvf lf-linux-amd64.tar.gz\nКак я уже говорил ранее, просто переместите исполняемый файл в каталог вашего пути:\n# mv lf /usr/local/bin\nНаконец, запустите команду LF, чтобы использовать ее. Нажимать qдля выхода из команды LF:\n# lf\n\n\nИспользование команды LF\nПерейдите на следующую страницу для просмотра видеоуроков\nИспользуйте следующие клавиши для навигации по файлам и папкам в каталоге:\nk or UP Arrow:Чтобы двигаться вверх\n\nj or DOWN Arrow:Чтобы двигаться вниз\nИспользуйте следующие клавиши для перемещения по половине страницы:\nCtrl+u:Переместиться на полстраницы вверх\n\nCtrl+d:Переместить на полстраницы вниз\nИспользуйте следующие клавиши для перемещения всей страницы:\nCtrl+b or PgUp:Чтобы переместить всю страницу вверх\n\nCtrl+f or PgDn:Чтобы переместить всю страницу вниз\nИспользуйте следующие клавиши для перехода к началу и концу списка:\ngg or Home:Для перехода в начало списка\n\nG or End:Для перехода в конец списка\nИспользуйте следующие клавиши для переключения, инвертирования и снятия пометок с файлов в текущем каталоге:\nspace:Для переключения файлов в текущем каталоге\n\nv:Инвертирует выборки в текущем каталоге\n\nu:Чтобы снять отметки со всех вариантов\nИспользуйте следующие клавиши для копирования, вырезания, вставки и удаления файлов:\ny:Чтобы скопировать текущий файл или выделенные фрагменты\n\nd:Чтобы вырезать текущий файл или выделенные фрагменты\n\np:Вставить скопированные или вырезанные файлы в текущий каталог\n\nc:Очищает скопированные или вырезанные файлы\nИспользовать для чтения встроенных или пользовательских команд:\n:set hiddenВведите следующую пользовательскую команду для просмотра скрытых файлов\n\n:set sortby size; set info size Введите следующую пользовательскую команду, чтобы просмотреть файлы и размер каталога.\nИспользовать $ для запуска команды в оболочке:\n$ touch magi.txt Чтобы создать новый файл в текущем каталоге\n\n$ mv magi.txt 2g.txt Чтобы переименовать файл.\nИспользуйте следующие клавиши для выполнения поиска:\n/[Pattern]:Чтобы выполнить поиск\n\nn:Переход к следующему сопоставлению с образцом\n\np:Переход к предыдущему сопоставлению шаблонов\n\n?[Pattern]:Чтобы выполнить обратный поиск\nНажмите z клавишу, чтобы просмотреть сочетания клавиш по умолчанию, связанные с клавишей z (с префиксом z).\nza      set info size:time\n\nzh      set hidden!\n\nzn      set info\n\nzr      set reverse!\n\nzs      set info size\n\nzt      set info time\nНажмите s клавишу, чтобы просмотреть сочетания клавиш по умолчанию, связанные с клавишей s (с префиксом s).\nsn :{{ set sortby natural;  установить информацию;  }}\n\nss :{{ установить размер сортировки;  установить размер информации;  }}\n\nst :{{ установить время сортировки;  установить время получения информации;  }}\nДополнительные команды.\n%[Command]:Используйте это для запуска команды в оболочке при передаче ввода из пользовательского интерфейса и вывода в пользовательский интерфейс\n\n![Command]:Используйте это для запуска команды в оболочке, которая после этого ожидает нажатия клавиши\n\n&[Command]:Чтобы запустить команду в фоновом режиме\n\nh:Чтобы перейти в родительский каталог.\n\n\nКонфигурационный файл LF(создать в ручную директорию,сам файл)\n/home/jenit/.config/lf/lfrc\nset shell sh\nset shellopts '-eu'\nset ifs \"\\n\"\nset drawbox\nset scrolloff 10\nset incsearch\nset ignoredia\nset period 2\nset ratios 1:2:2\n# set icons true\n\n# Custom Functions\ncmd mkdir ${{\nprintf \"Directory Name: \"\nread ans\nmkdir $ans\n}}\n\ncmd mkfile ${{\nprintf \"File Name: \"\nread ans\n$EDITOR $ans\n}}\n\n# Archive bindings\ncmd unarchive ${{\ncase \"$f\" in\n    *.zip) unzip \"$f\" ;;\n    *.tar.gz) tar -xzvf \"$f\" ;;\n    *.tar.bz2) tar -xjvf \"$f\" ;;\n    *.tar) tar -xvf \"$f\" ;;\n    *) echo \"Unsupported format\" ;;\nesac\n}}\n\n# Trash bindings\ncmd trash ${{\nfiles=$(printf \"$fx\" | tr '\\n' ';')\nwhile [ \"$files\" ]; do\n    file=${files%%;*}\n\n    trash-put \"$(basename \"$file\")\"\n    if [ \"$files\" = \"$file\" ]; then\n    files=''\n    else\n    files=\"${files#*;}\"\n    fi\ndone\n}}\n\ncmd restore_trash ${{\ntrash-restore\n}}\n\n\n\nmap f ${{\n    selected=\"$(fzf)\"\n    [ -d \"$selected\" ] && cmd=cd || cmd=select\n    lf -remote \"send $id $cmd '$selected'\"\n}}\n\n\nmap D delete\nmap x extract # извлечь архив\n\ncmd extract ${{\n    set -f\n    case $f in\n        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;\n        *.tar.gz|*.tgz) tar xzvf $f;;\n        *.tar.xz|*.txz) tar xJvf $f;;\n        *.zip) unzip $f;;\n        *.rar) unrar x $f;;\n        *.7z) 7z x $f;;\n    esac\n}}\n\ncmd tar ${{\n    set -f\n    mkdir $1\n    cp -r $fx $1\n    tar czf $1.tar.gz $1\n    rm -rf $1\n}}\n\ncmd zip ${{\n    set -f\n    mkdir $1\n    cp -r $fx $1\n    zip -r $1.zip $1\n    rm -rf $1\n}}\n\n# Установленные клавиши(hotkey)\n# Bindings\nmap d\nmap m\n\n# запуск внешних программ\n# map c $vscodium \"$f\"\nmap gk $konsole \"$f\"\n# map ae $wine \"$f\"\n\nmap au unarchive\n\n\n# Basic Functions\nmap . set hidden!\nmap dd trash\nmap dr restore_trash\nmap p paste\nmap x cut\nmap y copy\nmap &lt;enter&gt; open\nmap R reload\nmap mf mkfile\nmap md mkdir\nmap bg setwallpaper\nmap C clear\n\n# Movement\nmap gD cd ~/Documents\nmap gd cd ~/Downloads\nmap gp cd ~/Pictures\nmap gc cd ~/.config\nmap gr cd ~/repos\nmap gv cd ~/Videos\nmap gs cd ~/.local/bin\nmap gt cd ~/.local/share/Trash/files"
  },
  {
    "objectID": "posts/cron/index.html",
    "href": "posts/cron/index.html",
    "title": "cron - Планировщик заданий.Консольный.",
    "section": "",
    "text": "Есть много полезных консольных команд и приложений.Одна из них Cron(crontab).\n#|  hour (0-23),\n#|  |   day of the month (1-31),\n#|  |   |   month of the year (1-12),\n#|  |   |   |   day of the week (0-6 with 0=Sunday).\n#|  |   |   |   |   commands\n\ncrontab -e – открывает конфигурационный файл\ncrontab -l – показывает список задач из конфигурационного файла (все, что было запланировано).\ncrontab -r – удаляет конфигурационный файл вместе со всеми запланированными задачами.\nсrontab -v – показывает, когда в последний раз открывался конфигурационный файл.\n\n\ncrontab -e создать задание(работает от имени пользователя,без sudo)\n\n\nCron.Его основная задача выполнять нужные процессы в нужное время.(Планировщик заданий)\n\nНа моем примере:\n\ncrontab -e\n00 09 16 * * echo ‘date’ &gt; /home/jenit/Desktop/date.txt\n\n\n\n\nВ Astra Linux так делать запись:\n\nsudo crontab -u jenit -e\n00 09 16 * * echo ‘date’ &gt; /home/jenit/Desktop/date.txt\n\n(Расшифровка: в ноль минут,в девять часов,шестнадцатого числа,каждый месяц отпралять сообщение со словом data на рабочий стол,в файл data.txt.)\n00 - минуты\n09 - часы\n16 - дата,(день месяца)\n* - месяц\n* - день недели\n\nМой crontab -e\n\n00 09 16 * * echo ‘date’ &gt; /home/jenit/‘Рабочий стол’/date.txt\n00 08 05 03 * echo ‘Birthday’ &gt; /home/jenit/‘Рабочий стол’/date-Sl.txt\n\nПосмотрите в свое файловом менеджере как у Вас пишется “Рабочий стол” или “Desktop”\n\n\n\nEnter - сохранить\n\n\n\nЕсли нужно по расписанию проиграть звуковой файл.\n\n00 08 * * * /usr/bin/mpg123 /home/jenit/Music/mahnem.mp3\n\nУ меня почему то корректно работает только с mpg123(консольный аудио проигрыватель)"
  },
  {
    "objectID": "posts/dd/index.html",
    "href": "posts/dd/index.html",
    "title": "dd - Запись iso-образа",
    "section": "",
    "text": "Способ - dd\nОпределить имя flash-носителя, например, sd[x]:\n\n$ sudo fdisk -l\n\nor\n\n$ lsblk\n\nПерейдите в консоли в каталог с iso-образом:\n\n$ cd /путь/до/образа\n\n\n\nЗапись iso-образа:\n(это для Всех OS)\n\n$ dd if=***.iso of=/dev/sd[x] status=progress\n\nstatus=progress - показывает прогресс записи\n\n\nВАЖНО!\nВместо sd[x] укажите свое имя носителя.\nПри этом будут стерты все данные на USB накопителе и записаны новые!\n\n\nДля RedOS\nДля систем с UEFI и таблицей разделов GPT следует подготовить flash-носитель, выполнив список команд:\n\nparted -s /dev/sd[x] mklabel gpt\nparted -s –align=optimal /dev/sd[x] mkpart REDOS fat32 1MiB 100%\nparted -s /dev/sd[x] set 1 boot on\nmkfs.vfat -F 32 /dev/sd[x]\n\n\n\nЗапись iso-образа:\n\n$ dd if=***.iso of=/dev/sd[x] status=progress\n\nstatus=progress - показывает прогресс записи\nЕсли хотите видеть процесс создания флешки для этого нужно будет установить улучшенную версию dd, которая носит название dcfldd.\n\nsudo apt-get install dcfldd\n\nСотрудники лаборатории DoD Computer Forensics Laboratory (DCFL) внесли некоторые изменения в команду dd, тем самым улучшив ее и применяя в своих исследовательских работах. В итоге на свет появилась команда dcfldd, которая обеспечивает хеширование копируемых данных через некоторые промежутки времени для их аутентификации. Более того, dcfldd работает гораздо быстрее, чем dd.\nТеперь, если Вы хотите именно видеть прогресс копирования, либо создания образа, Вам нужно выполнить команду:\n\nsudo dcfldd if=/dev/sdc of=image.iso"
  },
  {
    "objectID": "posts/archivers/index.html",
    "href": "posts/archivers/index.html",
    "title": "Архиваторы в консоли",
    "section": "",
    "text": "Иногда бывают ситуации когда нужно использовать архиватор в консоли.В некоторых случаях это быстрее и удобнее.\n\nАрхив TAR\n\nАрхивирование файла или директории без сжатия:\ntar -cf архив.tar файл\n\nдополнительный ключ “v”, для подробного вывода процесса архивации:\n\n\ntar -cvf архив.tar директория/\n\n\n\nРаспаковка архива tar:\n\ntar -xvf архив.tar\n\n\n\nАрхивирование с использованием сжатия gzip:\n\ntar -zcvf архив.tar.gz файл\ntar -zcvf архив.tar.gz директория/\n\n\n\nАрхивирование с использованием сжатия bzip2:\n\ntar -jcvf архив.tar.bz2 файл\ntar -jcvf архив.tar.bz2 директория/\n\n\n\nПроверка архива gzip без распаковки:\n\ntar -zvtf архив.tar.gz\n\n\n\nПроверка архива bzip2 без распаковки:\n\ntar -jvtf архив.tar.bz2\n\n\n\nРаспаковка архива gzip:\n\ntar -zxvf архив.tar.gz\n\n\n\nРаспаковка архива bzip2 с указанием конечной папки для файлов:\n\ntar -jxvf архив.tar.bz2 директория/\n\n\n\nКоманды Tar:\n\nx — извлечь файлы из архива;\nv — подробный вывод информации на экран;\nf — Обязательная опция. Если не указать, Tar будет пытаться использовать магнитную ленту вместо файла;\nz — обработать архив сжатый gzip’ом;\nj — обработать архив сжатый bzip’ом.\n\n\n\n\nАрхив ZIP\n\nАрхивирование файла:\n\nzip архив.zip файл\n\n\n\nАрхивирование директории:\n\nzip -r архив.zip директория/\n\n\n\nПовышение уровня сжатия:\n\nzip -0 архив.zip файл\nzip -9 архив.zip файл\n\n\n\nЗащита архива паролем не рекомендуемая опция, показывает пароль:\nzip -P пароль архив.zip файл\n\n\nЗащита архива паролем,безопасная опция, пароль запрашивается и скрывается при вводе:\n\nzip -e архив.zip файл\n\n\n\nРазархивирование:\n\nunzip архив.zip\n\n\n\nДетальный вывод информации при распаковке:\n\nunzip -v архив.zip\n\n\n\nПолучение списка содержимого архива:\n\nunzip -l архив.zip\n\n\n\n\nАрхив 7z\n\nУстанавливаем:(В некоторых дистрибутивах установлен)\n\nsudo apt install p7zip p7zip-full (или Вашим пакетным менеджером)\n\n\n\nАрхивируем:\n\n7z a arch.7z file01.foo file02.foo\n\n\n\nРаспаковка:\n\n7z x arch.7z\n7z x arch.7z -o/куда_извлекать\n\n\n\nПросмотр архива:\n\n7z l arch.7z\n7z l -slt arch.7z\n\n\n\n\nAtool\n\nЕсли использовать утилиту atool, то вы сможете работать с любым форматом архивов\n\n\nУстановка:\n\nsudo apt install atool (или Вашим пакетным менеджером)\n\n\n\nРаспаковка:\n\naunpack foobar.tar.gz\n\n\n\nАрхивирование:\n\napack myarchive.zip file1 file2"
  },
  {
    "objectID": "posts/rsync/index.html",
    "href": "posts/rsync/index.html",
    "title": "Команда rsync(резервное копирование)",
    "section": "",
    "text": "Взято из Википедии:\nrsync (англ. remote synchronization) — программа для UNIX-подобных систем, которая эффективно выполняет синхронизацию файлов и каталогов в двух местах (необязательно локальных) с минимизированием трафика, используя кодирование данных при необходимости. Важным отличием rsync от многих других программ/протоколов является то, что зеркалирование осуществляется одним потоком в каждом направлении (а не по одному или несколько потоков на каждый файл). rsync может копировать или отображать содержимое каталога и копировать файлы, опционально используя сжатие и рекурсию. rsync передаёт только изменения файлов, что отражается на производительности программы.\n\n\nsudo rsync -aAXvzh / –exclude={“/home/”,“/dev/”,“/proc/”,“/sys/”,“/tmp/”,“/run/”,“/mnt/”,“/media/”,“/lost+found”} /home/jenit/2024\n\n(перед exclude два тире)\nГде копируем корневой раздел (/).\nПрописываем директории которые исключаем из копирования (-exclude).\nКуда копируем (/home/jenit/2024).\nЯ пользуюсь этим способом для резервного копирования своей системы.\nПервый раз использования - будет копироваться вся система,затем ,при последующим копировании, только новые и измененные файлы и директории.\nВо время синхронизации можно удалять файлы (в старой копии), которых нет в источнике, для этого используется опция –delete.\n(перед delete два тире)\nНапример:\n\n$ sudo rsync -avzX –delete / –exclude={” /dev/* “,”/proc/* “,” /home/ * “,”/sys/* “,” /tmp/* “,” /run/* “,” /mnt/* “,” / media /* “,” /lost+found “} /mnt\n\n(перед delete два тире)\n\nВсе файлы, которых нет в новой копии, в старой будуд удалены.\n\nОбязательно исключите целевой каталог, если он существует в локальной системе, иначе будет бесконечный цикл копирования.\nЧтобы восстановить систему из резервной копии, просто измените исходные и целевые пути в приведенной выше команде.\n\nОпции\nТеперь давайте кратко рассмотрим параметры rsync. Здесь перечислены не все опции. Для более подробной информации смотрите man rsync:\n\n-v - Выводить подробную информацию о процессе копирования;\n-q - Минимум информации;\n-c - Проверка контрольных сумм для файлов;\n-a - Режим архивирования, когда сохраняются все атрибуты оригинальных файлов;\n-R - Относительные пути;\n-b - Создание резервной копии;\n-u - Не перезаписывать более новые файлы;\n-l - Копировать символьные ссылки;\n-L - Копировать содержимое ссылок;\n-H - Копировать жесткие ссылки;\n-p - Сохранять права для файлов;\n-g - Сохранять группу;\n-t - Сохранять время модификации;\n-x - Работать только в этой файловой системе;\n-e - Использовать другой транспорт, например, ssh;\n-z - Сжимать файлы перед передачей;\n-h - выводите числа в удобочитаемом формате\n-A - сохранить списки управления доступом\n-X - сохранение расширенных атрибутов\n–delete - Удалять файлы которых нет в источнике;\n–exclude - Исключить файлы по шаблону;\n–include - Включить файлы по шаблону\n–recursive - Перебирать директории рекурсивно;\n–no-recursive - Отключить рекурсию;\n–progress - Выводить прогресс передачи файла;\n–stat - Показать статистику передачи;\n–version - Версия утилиты."
  },
  {
    "objectID": "posts/user/index.html",
    "href": "posts/user/index.html",
    "title": "Создание/Удаление пользователя",
    "section": "",
    "text": "Useradd vs Adduser\nuseradd - это низкоуровневая утилита для добавления новых пользователей\nadduser - дружественный интерактивный интерфейс для useradd, написанный на Perl.\nadduser является более удобным для пользователя и интерактивным, чем его серверная часть useradd.\nНет никакой разницы в предоставляемых функциях.\n\nДобавить/Удалить пользователя\n\nsudo adduser “user” - добавить пользователя\nsudo passwd “user” - задать пароль\nsudo usermod -a -G wheel “user” - добавить пользователя в группу wheel\nsudo userdel -r “user” - удалить пользователя и домашний каталог"
  },
  {
    "objectID": "posts/curl/index.html",
    "href": "posts/curl/index.html",
    "title": "Curl.Консольный менеджер загрузок.",
    "section": "",
    "text": "cURL — инструмент командной строки и библиотека для передачи данных с URL-адресов.\nКоманда поддерживает многие протоколы, включая HTTP, HTTPS, FTP, SCP и SFTP.\n\nСкачивание:\n\n$ curl -o название файла URL\n$ curl опции ссылка\n\n\n\nОсновные опции:\n-# - отображать простой прогресс-бар во время загрузки;\n-0 - использовать протокол http 1.0;\n-1 - использовать протокол шифрования tlsv1;\n-2 - использовать sslv2;\n-3 - использовать sslv3;\n-4 - использовать ipv4;\n-6 - использовать ipv6;\n-A - указать свой USER_AGENT;\n-b - сохранить Cookie в файл;\n-c - отправить Cookie на сервер из файла;\n-C - продолжить загрузку файла с места разрыва или указанного смещения;\n-m - максимальное время ожидания ответа от сервера;\n-d - отправить данные методом POST;\n-D - сохранить заголовки, возвращенные сервером в файл;\n-e - задать поле Referer-uri, указывает с какого сайта пришел пользователь;\n-E - использовать внешний сертификат SSL;\n-f - не выводить сообщения об ошибках;\n-F - отправить данные в виде формы;\n-G - если эта опция включена, то все данные, указанные в опции -d будут передаваться методом GET;\n-H - передать заголовки на сервер;\n-I - получать только HTTP заголовок, а все содержимое страницы игнорировать;\n-j - прочитать и отправить cookie из файла;\n-J - удалить заголовок из запроса;\n-L - принимать и обрабатывать перенаправления;\n-s - максимальное количество перенаправлений с помощью Location;\n-o - выводить контент страницы в файл;\n-O - сохранять контент в файл с именем страницы или файла на сервере;\n-p - использовать прокси;\n--proto - указать протокол, который нужно использовать;\n-R -  сохранять время последнего изменения удаленного файла;\n-s - выводить минимум информации об ошибках;\n-S - выводить сообщения об ошибках;\n-T - загрузить файл на сервер;\n-v - максимально подробный вывод;\n-y - минимальная скорость загрузки;\n-Y - максимальная скорость загрузки;\n-z - скачать файл, только если он был модифицирован позже указанного времени;\n-V - вывести версию."
  },
  {
    "objectID": "posts/bat/index.html",
    "href": "posts/bat/index.html",
    "title": "Bat",
    "section": "",
    "text": "bat — это продвинутый cat\nbat — это продвинутый клон cat с поддержкой подсветки синтаксиса и интеграцией Git.\nЕсли вы хотите больше комфорта при просмотре файлов в терминале то стоит обратить внимание на bat.\nУтилита bat поддерживает подсветку синтаксиса для большого количества языков программирования. Вывод текста в читаемом виде и нумерация строк позволяем проще воспринимать код.\n\nПоддержка Git.\nВы будете видеть какие строки были добавлены либо изменены.\nВ Slackware уже установлена из “коробки”.\nВ остальных - своим пакетным менеджером."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Посты",
    "section": "",
    "text": "Vim\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nJun 4, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nsudo\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCurl.Консольный менеджер загрузок.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ninternet\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nСоздание/Удаление пользователя\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBat\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nСоздание файловой системы\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 23, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nТерминал\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 11, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nФайловый менеджер\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMpg123\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nmusic\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nFsck - проверка флешки на ошибки\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 10, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nNano - консольный,текстовой редактор\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCat\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\neditor\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMoc/mocp - консольный аудио проигрыватель.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nmusic\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nАрхиваторы в консоли\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\narchivers\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMount - монтирование дисков,образов\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ndisk\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWget.Консольный менеджер загрузок.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ninternet\n\n\n\n\n\n\n\n\n\nApr 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\ncron - Планировщик заданий.Консольный.\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда rsync(резервное копирование)\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ncopy\n\n\n\n\n\n\n\n\n\nApr 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\ndd - Запись iso-образа\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\ndisk\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда inxi(данные о системе)\n\n\n\n\n\n\nnews\n\n\nterminal\n\n\nsystem\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nКоманда lsblk\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nterminal\n\n\ndisk\n\n\n\n\n\n\n\n\n\nApr 6, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/sudo/index.html",
    "href": "posts/sudo/index.html",
    "title": "sudo",
    "section": "",
    "text": "sudo (Substitute User and do)\nsudo (англ. Substitute User and do, дословно «подменить пользователя и выполнить») — программа для системного администрирования UNIX-систем, позволяющая делегировать те или иные привилегированные ресурсы пользователям с ведением протокола работы.\nОсновная идея — дать пользователям как можно меньше прав, при этом достаточных для решения поставленных задач.\nПрограмма поставляется для большинства UNIX и UNIX-подобных операционных систем.\nКоманда sudo предоставляет возможность пользователям выполнять команды от имени суперпользователя root, либо других пользователей.\nПравила, используемые sudo для принятия решения о предоставлении доступа, находятся в файле /etc/sudoers (для редактирования файла можно использовать специальный редактор visudo, запускаемый из командной строки без параметров, в том числе без указания пути к файлу).\nЯзык их написания и примеры использования подробно изложены в man sudoers.\nВ большинстве случаев грамотная настройка sudo делает небезопасную работу от имени суперпользователя ненужной.\nВсе действия оказываются выполнимы из-под аккаунта пользователя, которому разрешено использовать sudo без ограничений.\nИмеется возможность запрещать и разрешать определённым пользователям или группам выполнение конкретного набора программ, а также разрешить выполнение определённых программ без необходимости ввода своего пароля.\n\nПримеры:\n\n\nРедактировани файла sudoers\n\nsudo vim /etc/sudoers\n\nРаскомментировать (убрать ‘#’ в начале строки) в /etc/sudoers строчку, дав права выполнять через sudo любую команду пользователям входящим в группу wheel, запрашивая их пароль:\nWHEEL_USERS ALL=(ALL) ALL\nС точки зрения безопасности правильнее давать права на выполнение sudo не всей группе wheel, а конкретному пользователю, например petya, входящего в группу «admin»:\npetya admin=(ALL) ALL\n\nРазрешить пользователям, входящим в группу «admin», выполнять команды с правами любого пользователя (с запросом пароля):\n%admin ALL=(ALL) ALL\n\n\nПозволить пользователю «user1» выполнять команды с правами «user2» или «user3», не запрашивая пароль:\nuser1 ALL=(user2, user3)NOPASSWD: ALL\n\n\nРазрешить пользователю «user» выполнять команду /usr/bin/rsync без запроса пароля:\nuser ALL=NOPASSWD: /usr/bin/rsync"
  },
  {
    "objectID": "posts/nano/index.html",
    "href": "posts/nano/index.html",
    "title": "Nano - консольный,текстовой редактор",
    "section": "",
    "text": "Редактор nano - это консольный текстовый редактор.Более “продвинутый” чем cat.\nОн есть во всех дистрибутивахLinux.\nОн есть в macOS и его можно запустить под Windows.\nnano часто используется для редактирования конфигурационных файлов, когда графический интерфейс отсутствует.\nУправление в nano осуществляется с клавиатуры с использованием горячих клавиш. В нижней части редактора приведен список основных сочетаний клавиш.\n\nСимвол ^ означает клавишу Ctrl.\nНапример:\n^X означает сочетание клавиш Ctrl+X. Регистр символов не учитывается, сочетание Ctrl+X эквивалентно Ctrl+x.\nРассмотрим, как выполнять основные действия при работе с nano.\n\nСоздать новый файл\nЧтобы создать файл достаточно просто запустить редактор без параметров.\nКогда вы будете закрывать редактор, то необходимо будет ввести имя файла.\n\nnano\n\nЕсли нужны номера строк запустить с опцией:\n\nnano -l\n\nТакже можно сразу задать имя нового файла:\n\nnano &lt;новый_файл&gt;\n\nПосле выполнения команды запустится редактор nano и в нем откроется для редактирования новый пустой файл.\n\n\nОткрыть существующий файл для редактирования\nЧтобы отредактировать существующий файл, необходимо запустить редактор nano и указать путь до файла, который нужно открыть:\n\nnano &lt;существующий_файл&gt;\n\n\n\nСохранение изменений\nВы отредактировали файл и хотите сохранить изменения, но не закрывать редактор. В таком случае используется сочетание клавиш:\n\nCtrl+O\n\n(это латинская буква -оу,а не ноль)\nВ строке статуса появится сообщение: File Name to Write: имя_файла (если имя файла отсутствует, о нужно ввести имя файла).\nДля сохранения изменений нажмите Enter.\n\n\nСохранить и выйти\nЧтобы сохранить изменения и выйти из редактора можно воспользоваться сочетанием клавиш:\n\nCtrl+X\n\nВ данном случае, если вы изменяли файл, то появится вопрос: “Save modified buffer (ANSWERING No Will DESTROY CHANGES)?”.\nНажмите клавишу y.\nПоявится вопрос на ввод имени файла.\nВведите новое имя файла или просто нажмите Enter.\nИзменения будут сохранены, редактор закроется.\n\n\nВыход без сохранения изменений\nЧтобы выйти из редактора и не сохранять изменения используется сочетание клавиш:\n\nCtrl+X\n\nЕсть появится вопрос “Save modified buffer ..?”, нажмите n.\n\n\nКопирование и вставка\nЧтобы вырезать строку целиком и поместить ее в буфер, переместите курсор на требуемую строку и нажмите:\n\nCtrl+K\n\nЧтобы вставить строку из буфера нажмите:\n\nCtrl+U\n\n\n\nКопирование и вставка произвольного текста\nЧтобы скопировать произвольный текст в буфер обмена, его необходимо сначала выделить. Чтобы начать выделение поместите курсор на начало текста, который планируется копировать, и нажмите:\n\nCtrl+6\n\nПеремещайте курсор, текст будет выделяться.\nЧтобы скопировать выделенный текст в буфер обмена, нажмите:\n\nAlt+6\n\nили, чтобы вырезать выделенный текст, нажмите:\n\nCtrl+K\n\nПереместите курсор в то место, куда необходимо вставить текст из буфера. Чтобы вставить текст из буфера нажмите:\n\nCtrl+U\n\n\n\nПоиск текста\nДля поиска текста внутри файла используется сочетание клавиш:\n\nCtrl+W\n\nНужно ввести строку для поиска и нажать Enter.\nКурсор будет помещен на первое вхождение искомого текста (относительно курсора). Чтобы перейти к следующему вхождению, нажмите:\n\nAlt+W\n\nЧтобы прекратить поиск, нажмите:\n\nCtrl+C\n\n\n\nПоиск и замена текста\nЧтобы найти и заменить текст используется сочетание клавиш:\n\nCtrl+\n\n\nПоявится запрос на ввод текста для поиска.\nВведи строку для поиска и нажмите Enter\nЗатем появится запрос на ввод текста, на который необходимо выполнить замену. Введите строку и нажмите Enter\nДалее будет выдан запрос на замену найденного вхождения искомой строки. Можно нажать клавишу A, чтобы заменить сразу все вхождения в файле или использовать клавиши Y или N, чтобы заменять или нет, найденные вхождения искомой строки.\n\n\nГорячие клавиши\nЧтобы вывести информацию по всем горячим клавишам, используется сочетание Ctrl+G.\n\nCtrl+A Переместить курсор в начало строки.\nCtrl+E Переместить курсор в конец строки.\nCtrl+Y Переместить курсор на 1 страницу вверх (аналог PageUp)\nCtrl+V Переместить курсор на 1 страницу вниз (аналог PageDown)\nCtrl+_ Перейти к определенной строке (нужно будет ввести номер строки)\nCtrl+C Показать на какой строке и в какой позиции находится курсор\nCtrl+W Поиск текста в файле. Необходимо ввести строку для поиска\nCtrl+  Поиск и замена текста в файле. Сначала вводится строка для поиска, затем строка для замены\nCtrl+D Удалить символ под курсором\nCtrl+K Удалить текущую строку\nCtrl+O Сохранить изменения, не закрывая редактор\nCtrl+X Выход из редактора. Если файл был изменен, появится запрос на сохранение изменений.\n\n\n\nКое-что еще\nЕще пара интересных трюков при работе с nano, о которых не все знают.\n\nCtrl = Esc Esc\n\nВместо клавиши Ctrl можно использовать двойное нажатие на клавишу Esc. Например:\n\nEsc+Esc+X\n\nЭто эквивалентно сочетанию Ctrl+X.\n\n\nТолько для чтения\nЧтобы открыть файл только для чтения используется ключ -v:\n\nnano -v &lt;файл&gt;\n\n\n\nРезервная копия файла\nМожно сделать так, чтобы при изменения файла создавалась его резервная копия.\nДля этого используется ключ -B:\n\nnano -B &lt;файл&gt;\n\nЕсли вы измените файл и сохраните изменения, то будет создана резервная копия файла, с содержимым файла, которое было до изменения.\nИмя резервной копии соответствует имени исходного файла со значком тильды ~ на конце.\n“ссылка”:\nnano\n\n\nКлючи:\n\n-A –smarthome Включить умную клавишу home\n-B –backup Делать резервные копии при сохранении\n-C &lt;каталог&gt; –backupdir=&lt;каталог&gt; Каталог сохранения уникальных резервных копий\n-D –boldtext Использовать жирный шрифт\n-E –tabstospaces Конвертировать табуляции в пробелы\n-F –multibuffer По умолчанию читать файл в новый буфер\n-G –locking Использовать файлы блокировки (как в vim)\n-H –historylog Сохранение & перезагрузка старых строк поиска/замены\n-I –ignorercfiles Не использовать на файлы nanorc\n-J &lt;число&gt; –guidestripe=&lt;число&gt; Показать линейку на этом столбце\n-K –rawsequences Решить проблему зависания цифровой клавиатуры\n-L –nonewlines Не добавлять пустую строку в конце\n-M –trimblanks Обрезать хвостовые пробелы при ручном переносе строк\n-N –noconvert Не преобразовывать из DOS/Mac формата\n-O –bookstyle Ведущий пробел означает новый параграф\n-P –positionlog Save & restore position of the cursor\n-Q &lt;regex&gt; –quotestr=&lt;regex&gt; Регулярное выражение для поиска кавычек\n-R –restricted Ограничить доступ к файловой система\n-S –softwrap Переносить длинные строки при просмотре\n-T &lt;число&gt; –tabsize=&lt;число&gt; Установить ширину табуляции\n-U –quickblank Очищать строку состояние при нажатии\n-V –version Показать версию и выйти\n-W –wordbounds Определять границы слов более точно\n-X &lt;строка&gt; –wordchars=&lt;строка&gt; Какие еще символы являются частью слова\n-Y &lt;имя&gt; –syntax=&lt;имя&gt; Использовать описание синтаксиса для подсветки\n-Z –zap Очищать выделенную область с помощью Bsp и Del\n-a –atblanks Делать мягкий перенос только на пробелах\n-b –breaklonglines Жестко переносить слишком длинные строки\n-c –constantshow Постоянно показывать позицию курсора\n-d –rebinddelete Решить проблему Backspace/Delete\n-e –emptyline Не занимать строку под строкой заголовком\n-f &lt;файл&gt; –rcfile=&lt;файл&gt; Использовать только этот файл для настроек nano\n-g –showcursor Показывать курсор и текст справки в файловом менеджере\n-h –help Показать этот текст и выйти\n-i –autoindent Автоматический отступ на новых строках\n-j –jumpyscrolling Прокрутка по пол-экрана, а не по строке\n-k –cutfromcursor Вырезать от курсора до конца строки\n-l –linenumbers Показывать номера строк перед текстом\n-m –mouse Разрешить использование мыши\n-n –noread Не читать файл (только писать его)\n-o &lt;каталог&gt; –operatingdir=&lt;каталог&gt;Установить рабочий каталог\n-p –preserve Зарезервировать кнопки XON (^Q) и XOFF (^S)\n-q –indicator Показать индикатор позиции+части\n-r &lt;число&gt; –fill=&lt;число&gt; Установить ширину для жесткого переноса и выравнивания\n-s &lt;программа&gt; –speller=&lt;программа&gt; Использовать эту альтернативную проверку правописания\n-t –saveonexit Не спрашивая сохранять изменения при выходе\n-u –unix По умолчанию сохранять файл в Unix формате\n-v –view Режим просмотра (только чтение)\n-w –nowrap Не переносить длинные строки [по умолчанию]\n-x –nohelp Не показывать две строки помощи внизу\n-y –afterends Останавливаться на краях слов при зажатом Ctrl+Right\n-! –magic Использовать магию для определения синтаксиса\n-% –stateflags Показывать состояния в строке заголовка\n-_ –minibar Отобразите панель обратной связи внизу\n-0 –zero Скрыть все панели, используя терминал"
  },
  {
    "objectID": "posts/cat/index.html",
    "href": "posts/cat/index.html",
    "title": "Cat",
    "section": "",
    "text": "Команда cat - это одна из часто используемых команд Linux.\nС помощью этой команды можно очень просто посмотреть содержимое небольшого файла, склеить несколько файлов и многое другое.\n\nКоманда cat\nНазвание команды - это сокращения от слова catenate. По сути, задача команды cat очень проста - она читает данные из файла или стандартного ввода и выводит их на экран. Это все, чем занимается утилита.\nОпции позволяют очень сильно видоизменить вывод и сделать именно то, что вам нужно. Рассмотрим основные опции:\n\n$ cat опции файл1 файл2 …\n-b - нумеровать только непустые строки\n-E - показывать символ $ в конце каждой строки\n-n - нумеровать все строки\n-s - удалять пустые повторяющиеся строки\n-T - отображать табуляции в виде ^I\n-h - отобразить справку\n-v - версия утилиты\n\nЭто было все описание linux cat, которое вам следует знать, далее рассмотрим примеры cat linux. Использование cat в Linux\nСамое простое, где используется команда cat - это просмотр содержимого файла:\n\n$ cat file\n\nКоманда просто выведет все, что есть в файле. Чтобы вывести несколько файлов достаточно просто передать их в параметрах:\n\n$ cat file file1\n\nвы можете нумеровать все строки в файле:\n\n$ cat -n file\n\nВозможность объединения нескольких файлов не была бы настолько полезна, если бы нельзя было записать все в один:\n\n$ cat file1 file2 &gt; file3\n$ cat file3\n\nМожно получить очень примитивный текстовый редактор - прочитаем ввод и перенаправим его вместо вывода на экран в файл:\n\n$ cat &gt; file2\nEnter\nbla-bla-bla\nEnter\nCtrl+D\n\nПосмотреть содержимое созданного файла:\n\n$ cat file2"
  },
  {
    "objectID": "posts/moc/index.html",
    "href": "posts/moc/index.html",
    "title": "Moc/mocp - консольный аудио проигрыватель.",
    "section": "",
    "text": "Конфигурацию нашел в итернете,где не помню.Понравилась.\n\nmoc/mocp консольный проигрыватель\n\nРекомендую создать в директории ~/.moc файл конфигурации следующего содержания:\n\nnano ~/.moc/config\n\nMusicDir = “/home/user/Music” #Ваша папка с музыкой, в которую вы попадете нажав m\nRepeat = yes #Включает автоповтор автоматически при запуске плеера (без конфига он выключен)\nShuffle = no #Включает беспорядочное воспроизведение, можете включить, если хотите\nAutoNext = yes #Включает автоматический переход к следующему\nShowHiddenFiles = no #Скрытые файлы не отображаем, вряд ли там будет музыка\nStartInMusicDir = yes #Плеер будет открывать при запуске вашу папку с музыкой\nSavePlaylist = yes #Сохраняет плейлист после выхода из плеера\nTheme = transparent-background #То самое полупрозрачное, черное оформление, как на скрине. Остальные варианты лежат в /usr/share/moc\n\n\nЗапуск плеера:\n\nmocp\n\n\n\nУправление плеером тоже весьма простое:\n\na – (в обозревателе) - добавить файл или папку в плейлист Shift+A - добавить папку рекурсивно (со всеми подкаталогами и их содержимым)\nq – отправляет программу в фоновый режим (при этом музыка еще играет ака демон)\nQ – выйти из программы\ns – остановить воспроизведение\nn – следующий трек\nb – предыдущий\np – пауза\nS – шаффл\nR – повтор\nX – автоматический переход на следующий трек\nm – перейти в каталог музыки\nV – сохранить плейлист\n&lt; и &gt; – управление громкостью\nd - удалить композицию\nперемотка осуществляется стрелками (вправо/влево)\nTab - переключиться между обозревателем файлов и плейлистом ↑, ↓, PgUp/PgDn, Home/End - навигация по списку файлов/плейлисту\nEnter - в обозревателе файлов - войти в папку или начать воспроизведение выбранного файла (без изменения плейлиста) в плейлисте - переключиться на выбранный трек\nA (в обозревателе) - добавить файл или папку в плейлист Shift+A - добавить папку рекурсивно (со всеми подкаталогами и их содержимым)\nD (в плейлисте) - удалить файл из плейлиста\nShift+C - очистить плейлист\n\nЛично я считаю данный плеер весьма удобным для своих целей."
  },
  {
    "objectID": "posts/wget/index.html",
    "href": "posts/wget/index.html",
    "title": "Wget.Консольный менеджер загрузок.",
    "section": "",
    "text": "Wget - консольный менеджер загрузок.\nМожно с его помощью скачать изображения,видео,файлы,страницы сайта,сам сайт.\n\n\nОпции:\n\n-V (–version) - вывести версию программы\n-h (–help) - вывести справку\n-b (–background) - работать в фоновом режиме\n-o файл (–out-file) - указать лог файл\n-d (–debug) - включить режим отладки\n-v (–verbose) - выводить максимум информации о работе утилиты\n-q (–quiet) - выводить минимум информации о работе\n-i файл (–input-file) - прочитать URL из файла\n–force-html - читать файл указанный в предыдущем параметре как html\n-t (–tries) - количество попыток подключения к серверу\n-O файл (–output-document) - файл в который будут сохранены полученные данные\n-с (–continue) - продолжить ранее прерванную загрузку\n-S (–server-response) - вывести ответ сервера\n–spider - проверить работоспособность URL\n-T время (–timeout) - таймаут подключения к серверу\n–limit-rate - ограничить скорость загрузки\n-w (–wait) - интервал между запросами\n-Q (–quota) - максимальный размер загрузки\n-4 (–inet4only) - использовать протокол ipv4\n-6 (–inet6only) - использовать протокол ipv6\n-U (–user-agent)- строка USER AGENT отправляемая серверу\n-r (–recursive)- рекурсивная работа утилиты\n-l (–level) - глубина при рекурсивном сканировании\n-k (–convert-links) - конвертировать ссылки в локальные при загрузке страниц\n-P (–directory-prefix) - каталог, в который будут загружаться файлы\n-m (–mirror) - скачать сайт на локальную машину\n-p (–page-requisites) - во время загрузки сайта скачивать все необходимые ресурсы\n\n\n\nЗагрузка файла:\nКоманда wget linux скачает один файл и сохранит его в текущей директории. Во время загрузки мы увидим прогресс, размер файла, дату его последнего изменения, а также скорость загрузки:\n\nwget http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz\n\n\n\nСохранить файл с другим именем:\nОпция -О позволяет задать имя сохраняемому файлу, например, скачать файл wget с именем wget.zip:\n\nwget -O wget.zip http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz\n\n\n\nСкачать несколько файлов:\nВы можете скачать несколько файлов одной командой даже по разным протоколам, просто указав их URL:\n\nwget http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz ftp://ftp.gnu.org/gnu/wget/wget-1.10.1.tar.gz.sig\n\n\n\nВзять URL из файла:\nВы можете сохранить несколькоURL в файл, а затем загрузить их все, передав файл опции -i. Например создадим файл tmp.txt, со ссылками для загрузки wget, а затем скачаем его:\n\nwget -i /wget/tmp.txt\n\n\n\nПродолжить загрузку:\nУтилита wget linux рассчитана на работу в медленных и нестабильных сетях. Поэтому если вы загружали большой файл, и во время загрузки было потеряно соединение, то вы можете скачать файл wget с помощью опции -c.\n\nwget -c http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz\n\n\n\nЗагрузка файлов в фоне:\nОпция -b заставляет программу работать в фоновом режиме, весь вывод будет записан в лог файл, для настройки лог файла используются специальные ключи wget:\n\nwget -b -o ~/wget.log http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz\n\n\n\nОграничение скорости загрузки:\nКоманда wget linux позволяет не только продолжать загрузку файлов, но и ограничивать скорость загрузки. Для этого есть опция –limit-rate. Например ограничим скорость до 100 килобит:\n\nwget –limit-rate=100k ftp://ftp.iinet.net.au/debian/debian-cd/8.4.0/amd64/iso-dvd/debian-8.4. 0-amd64-DVD-1.iso\n\n\n\nЗагрузить и выполнить:\nВы, наверное, уже видели такие команды. wget позволяет сразу же выполнять скачанные скрипты:\n\nwget -O - http://сайт/скрипт.sh | bash\n\nЕсли опции -O не передать аргументов, то скачанный файл будет выведен в стандартный вывод, затем мы его можем перенаправить с интерпретатор bash, как показано выше.\n\n\nСохранить файл в папке:\nПо умолчанию wget сохраняет файл в текущую папку, но это поведение очень легко изменить с помощью опции -P:\n\nwget -P ~/Downloads/ http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz\n\n\n\nСкачать сайт:\nWget позволяет не только скачивать одиночные файлы, но и целые сайты, чтобы вы могли их потом просматривать в офлайне. Использование wget, чтобы скачать сайт в linux выглядит вот так:\n\nwget –mirror -p –convert-links -P ./ адрес_сайт\n\n\n\nЧтобы скачать сайт целиком с помощью wget нужно выполнить команду:\n\nwget http://site.com/\n\nПосле выполнения данной команды в директорию site.com будет загружена локальная копия сайта http://site.com.\nЧтобы открыть главную страницу сайта нужно открыть файлindex.html.\n\n\nРассмотрим используемые параметры:\n\n-r — указывает на то, что нужно рекурсивно переходить по ссылкам на сайте, чтобы скачивать страницы.\n-k — используется для того, чтобы wget преобразовал все ссылки в скаченных файлах таким образом, чтобы по ним можно было переходить на локальном компьютере (в автономном режиме).\n-p — указывает на то, что нужно загрузить все файлы, которые требуются для отображения страниц (изображения, css и т.д.).\n-l — определяет максимальную глубину вложенности страниц, которые wget должен скачать (по умолчанию значение равно 5, в примере мы установили 7). В большинстве случаев сайты имеют страницы с большой степенью вложенности и wget может просто «закопаться», скачивая новые страницы. Чтобы этого не произошло можно использовать параметр -l.\n-E — добавлять к загруженным файлам расширение .html.\n-nc — при использовании данного параметра существующие файлы не будут перезаписаны. Это удобно, когда нужно продолжить загрузку сайта, прерванную в предыдущий раз."
  },
  {
    "objectID": "posts/vim/vim.html",
    "href": "posts/vim/vim.html",
    "title": "Vim",
    "section": "",
    "text": "Самый лучший редактор “Всех Времен и Народов”\nЗдесь самые необходимые команды\n\nКоманды для Vim\n\nИз внешнего документа скопировать текст в vim:\n\nctrl+c\n\nи вставить в vim:\n\nctrl+shift+v or shift+insert (предпочтительнее)\n\nиз vim копировать в др.документ(редактор):\n\nshift+выделить текст\n\nвставить в др.документ(редактор):\n\nнажать среднюю кнопку мыши или ctrl+v\n\n\nvim &lt;’имя файла’&gt; - открыть файл в терминале\nvim &lt;‘path’&gt; &lt;’file_name’&gt; - открыть файл в терминале\n\n:q - выйти.\n:q! - выйти без сохранения.\n:w - сохранить.\ni - режим ввода.\nEsc - обычный режим.\nx - удалить символ.\n/ - поиск вперед\n? - Поиск назад\nn - Найти следующее вхождение\nN - Найти предыдущее вхождение\nd - удалить символ\ndd - удалить всю строку\nD - удалить символы начиная от курсора и до конца строки\ny - копировать символ\nyy или Y - скопировать всю строку\nv - выделить текст\np - вставить после позиции курсора\nP - вставить перед позицией курсора\nu - отменить последнее действие\n. - повторить еще раз последнее действие\nU - отменить последнее действие в текущей строке\n: № - Перемещение курсора на строку №…\n№G - Перемещение курсора на строку №…, аналогично :№…\ngg - Перемещение курсора в начало\nG - Перемещение курсора в конец\nw - Вперед на первую букву слова\ne - Вперед на последнюю букву слова\nb - Назад на первую букву слова\nge - Назад на последнюю букву слова\n$ - End На конец строки\n0 - (ноль), Home На начало строки\n\n\n\nДля переключения в режим редактирования используются такие команды:\n\ni - вставить текст с позиции курсора, символ под курсором будет заменен;\nI - вставить текст в начало строки;\na - добавить текст начиная от позиции курсора;\no - вставить новую строку после этой и начать редактирование;\nO - вставить новую строку перед этой и начать редактирование;\nr - заменить текущий символ;\nR - заменить несколько символов."
  },
  {
    "objectID": "posts/mkfs/index.html",
    "href": "posts/mkfs/index.html",
    "title": "Создание файловой системы",
    "section": "",
    "text": "Буквы в mkfs значке означают «make file system» (создать файловую систему)\nСоздать файловую систему семейства ext,fat,ntfs на устройстве можно с помощью команды mkfs.\n\nЕе синтаксис выглядит следующим образом:\n\nsudo mkfs -t [fs type] [target device]\nsudo mkfs -t тип устройство\n\n\n\nВы также можете использовать команду mkfs следующим образом:\n\nmkfs.[fs type] [target device]\n\n\n\nДоступны дополнительные параметры:\n-с - проверить устройство на наличие битых секторов\n-b - размер блока файловой системы\n-j - использовать журналирование для ext3\n-L - задать метку раздела\n-v - показать подробную информацию о процессе работы\n-V - версия программы\n\n\nнаиболее распространенный тип файловых систем:\nFAT*\n\nNTFS\n\next*\n\n\nСоздаем файловую систему на нашем устройстве.\nна примере Linux:\nmkfs без опций создает файловую систему ext2\nЕсли вы не укажете тип файловой системы для целевого устройства, он будет использовать файловую систему ext2 по умолчанию.\n\nsudo mkfs /dev/sdb1\n\n\n\nУкажите тип файла с помощью mkfs\nИспользование ext2 не очень удобно или целесообразно.\nВ наши дни большинство систем Linux рекомендуют использовать ext4.\n\n\nВы можете указать файловую систему следующим образом:\n\nsudo mkfs -t ext4 /dev/sdb1\n\n\n\nВы также можете использовать это так:\n\nsudo mkfs.ext4 /dev/sdb1\n\n\n\nпроверить наличие плохих блоков на устройстве\nимейте в виду, что проверка часто занимает много времени\n\nsudo mkfs -c /dev/sdb1\n\n\n\nПроверьте вновь созданную файловую систему\nСначала проверьте файловую систему устройства, которое вы только что использовали.\n\nsudo file -sL /dev/sdb1"
  },
  {
    "objectID": "posts/inxi/index.html",
    "href": "posts/inxi/index.html",
    "title": "Команда inxi(данные о системе)",
    "section": "",
    "text": "Inxi предустановлен во многих дистрибутивах Linux. Если не установлен, выполните одну из команд в терминале:\nОснованных на deb-пакетах (Ubuntu, Linux Mint, Debian):\n\nsudo apt install inxi\n\nОснованных на rpm-пакетах Fedora, RosaFresh:\n\nsudo dnf install inxi\n\nОткройте терминал, введите и выполните команду:\n\ninxi\n\nAlt Linux:\n\nsudo apt-get install inxi\n\nПосле выполнения команды inxi без аргументов, в терминале выводится краткий перечень информации.\nДля более полного вывода информации о вашем компьютере используйте:\n\ninxi -F\n\nС inxi вы можете даже узнать текущую температуру погоды вашей местности командой:\n\ninxi –weather\n\nПолную справку по утилите inxi можно получить:\n\ninxi -h\n\nЯ использую:\n\ninxi -IPS"
  },
  {
    "objectID": "posts/mpg123/index.html",
    "href": "posts/mpg123/index.html",
    "title": "Mpg123",
    "section": "",
    "text": "Mpg123.Консольный аудиоплеер.\n\nЕсли у вас есть каталог, содержащий ваши любимые песни, вы можете воспроизвести их все, введя команду mpg123.\n\n$ mpg123 *.mp3\n\n\n\nГорячие клавиши управления(rus)\n\ns или [ ] - прерывание/возобновление воспроизведения (т.е. ‘(un)pause’)\nf - следующий трек\nd - предыдущий трек\nb - вернуться к началу трека\np - цикл вокруг текущей позиции (как поврежденный аудио компакт-диск;-)\n. - вперед\n, - перемотка назад\n: - перемотка вперед\n; - быстрая перемотка назад\n&gt; - вперед\n&lt; - точная перемотка назад\n+ - увеличить громкость\n- - убавить звук\nr - Переключатель RVA\nv - подробный переключатель\nl - список текущего плейлиста с указанием текущего трека\nt - отображать информацию о теге (снова)\nm - вывести информацию заголовка MPEG (снова)\nh - эта помощь\nq - закрыть\nc - или [C] шаг вверх (маленький шаг, большой шаг)\nx - или [X] шаг вниз (маленький шаг, большой шаг)\nw - сбросить высоту звука до нуля\n\nНажмите «h», чтобы просмотреть список клавиш и функций."
  },
  {
    "objectID": "posts/lsblk/index.html",
    "href": "posts/lsblk/index.html",
    "title": "Команда lsblk",
    "section": "",
    "text": "Команда lsblk позволяет получить информацию о блочных устройствах,т.е о разделах - sda, sdb и sdc.\nМожно получить информацию об отдельном диске, если передавть его в качестве аргумента:\n\n$ lsblk /dev/sdb\n\nОпция -f или –fs позволяет добавить в вывод информацию о файловых системах."
  },
  {
    "objectID": "posts/mount/index.html",
    "href": "posts/mount/index.html",
    "title": "Mount - монтирование дисков,образов",
    "section": "",
    "text": "Команда mount в линуксе является очень гибким инструментом. С помощью команды mount можно подключить сетевой диск, раздел жесткого диска или USB-накопитель.\nУстройства, которые в данный момент подключены к компьютеру, можно посмотреть набрав в консоли:\n\nsudo fdisk -l\n\nили\n\nlsblk.\n\n\nМонтирование ISO\nДля начала создаем точку монтирования — папку /mnt/iso\n(естественно, /mnt/iso/ — это папка, где будут лежать наши смонтированные образы (вдруг их будет несколько, так чтобы сразу видеть, где образы, а где все остальное):\n(Точку монтирования можно взять любую)\n# mkdir /mnt/iso\nЕсли это ISO, все очень просто. Монтируем так:\n\n# mount -o loop -t iso9660 file.iso /mnt/iso\n\nпараметр -o loop, который указывает, что используется файл *.iso\nПосле того, как ISO образ диска будет смонтирован, Вы получите следующее сообщение:\nmount: warning: /mnt/mount_point seems to be mounted read-only\nМожете спокойно его игнорировать, так как в соответствии со стандартом ISO 9660, ISO образы всегда монтируются только в режиме read-only (только чтение).\nВсе, теперь все файлы из образа появятся в этой самой точке монтирования (/mnt/iso).\nПроверяем что ISO файл смонтирован:\nВыведите список смонтированных устройств, чтобы убедиться что наш ISO образ успешно примонтировался:\n\n$ mount\n\nВнизу Вы должны увидеть строку на подобии следующей:\n\n/home/user/disk.iso on /mnt/mount_point type iso9660 (ro)\n\nТеперь Вы можете перейти в точку монтирования и просмотреть файлы содержащиеся на ISO образе диска:\n\n$ cd /mnt/mount_point\n$ ls -l\n\nТип файловой системы (iso9660) лучше, все-таки, указать, но можно и не указывать.\n\n# mount file.iso /mnt/iso\n\n\n\nРазмонтирование ISO файла в Linux\nИспользуйте следующую команду для размонтирования ISO образа диска:\n\n$ sudo umount /dev/sdXX\n\n\n\nМонтирование разделов жесткого диска\nПримонтируем раздел жесткого диска /dev/sdb1 к диску /dev/sda.\nТочку монтирования выберем, к примеру - /home/user/Видео.\nТочку монтирования можно взять любую:\n\nsudo mount /dev/sdb1 /home/user/Видео\n\nгде user — это название Вашего имени пользователя.\nсначала пишется команда mount, потом пишется то, что нужно присоединять (цифра показывает номер раздела, у нас он всего один), а потом куда присоединять.\nДиск, командой mount, монтируется в указанную папку. В некоторых случаях, когда имеются логические ошибки на разделах подключаемого жесткого диска, нужно дополнительно указать тип файловой системы.\nВ данном случае у нас ext3.\n\nsudo mount -t ext3 /dev/sdb1 /home/user/Видео\n\nТак же этот параметр может принимать значения:\n\n-t ntfsили -t ntfs-3g\n-t vfat\n-t iso9660\n\nСоответственно для NTFS, FAT. Последний нужен только для подключения CD/DVD-ROM устройств и образа диска *.iso.\nПосмотреть полную информацию(доступный объем диска, свободное место) о примонтированных устройствах можно командой:\n\ndf -h\n\nОтмонтироватние устройства производится командой:\n\nsudo umount /dev/sdb1\n\nили\n\nsudo umount /home/user/Видео"
  }
]